<!--
     Geofrenzy UAS Demo Lauch File.
-->
<launch>
  <!-- *************************
       Command Line Arguments
       ************************* -->

  <!-- ..............
       gf_server
       .............. -->

  <!-- all nodes key off geofrenzy class index -->
  <arg name="gf_class_idx" default="168" />

  <!-- Uncomment corresponding param element below for this to take effect -->
  <arg name="geofrenzy_fence_filename"
    default="$(find geofrenzy)/samples/fences/2x3_fence.json" />

  <!-- ..............
       mavros
       .............. -->
  <arg name="fcu_url" default="tcp://intel-aero:5760" />

  <!-- ..............
       gf_sensor_relay
       .............. -->
  <arg name="rtl_gei" default="208" />        <!-- boolset base type -->
  <arg name="altitude_gei" default="211" />   <!-- threshold base type -->

  <!-- Define breach action for MAV
        12 = return-to-launch
        13 = land-now
        14 = goto-waypoint
  -->
  <arg name="mav_action" default="12" />


  <!-- *************************
       Start MavRos Node
       ************************* -->
  <node name="mavros" pkg="mavros" type="mavros_node"
    args="_fcu_url:=$(arg fcu_url)"
    output="screen">
  </node>


  <!-- *************************
       Start Geofrenzy Portal Server Node
       ************************* -->
  <node name="gf_server_$(arg gf_class_idx)" pkg="geofrenzy" type="gf_server"
      args="_gf_class_idx:=$(arg gf_class_idx)">
    <remap from="/fix" to="/mavros/global_position/global" />
  </node>

  <!-- Uncomment to test against a file -->
  <!--
  <param name="gf_server_$(arg gf_class_idx)/geofrenzy_fence_filename"
    type="str" value="$(arg geofrenzy_fence_filename)" />
  -->


  <!-- *************************
       Start Geofrenzy Sensor Relay Node
       ************************* -->
  <node name="gf_sensor_relay" pkg="geofrenzy" type="gf_sensor_relay"
      args="_geofrenzy_sr_server_gci:=$(arg gf_class_idx)
      _geofrenzy_sr_rtl_gei:=$(arg rtl_gei)
      _geofrenzy_sr_altitude_gei:=$(arg altitude_gei)"
      output="screen">
  </node>

  <!-- Only enable MAV related sentinel -->
  <param name="/gf_sensor_relay/geofrenzy_sr_enables" type="int" value="4" />

  <!-- Define breach action for MAV -->
  <param name="/gf_sensor_relay/geofrenzy_sr_mav_action" type="int"
    value="$(arg mav_action)" />


  <!-- *************************
       Start Geofrenzy Breach Inhibitor Node
       ************************* -->
  <!-- Uncomment to inhibit breaching -->
  <!--
  <node name="gf_breach_inhibitor" pkg="geofrenzy" type="gf_breach_inhibitor"
        args="_geofrenzy_sr_server_gci:=$(arg gf_class_idx)
        _geofrenzy_sr_rtl_gei:=$(arg rtl_gei)
        _geofrenzy_sr_altitude_gei:=$(arg altitude_gei)"
        output="screen">
  </node>
  -->

  <!-- *************************
       Start Geofrenzy VCloud Node
       ************************* -->
  <!-- Uncomment to publish VCloud data -->
  <!--
  <node name="gf_vcloud_$(arg gf_class_idx)" pkg="geofrenzy" type="gf_vcloud"
      args="_gf_class_idx:=$(arg gf_class_idx)"  output="screen">
    <remap from="gf_vcloud_$(arg gf_class_idx)/geofrenzy/cloud" to="/cloud_in"/>
    <param name="geofrenzy_cloud_hfov_min" type="double" value="-3.14159" />
    <param name="geofrenzy_cloud_hfov_max" type="double" value="3.14159" />
    <param name="geofrenzy_cloud_op_mode" type="int" value="1" />
  </node>
  -->

  <!-- Uncomment to automatically return to MANUAL operation after RTL -->
  <!--
  <param name="gf_sensor_relay/geofrenzy_sr_auto_manual"
    type="bool" value="true" />
  -->

</launch>
